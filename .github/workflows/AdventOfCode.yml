name: Advent Of Code

on:
  push:
    branches: [ main ]
    paths:
    - '**/AdventOfCode/**'
    - '.github/workflows/AdventOfCode.yml'

env:
  BASE_URL: https://adventofcode.com
  SESSION_ID: ${{ secrets.ADVENTOFCODE_SESSION_ID }}
  YEAR: 2020
  DAY: 10
  PART: 1

defaults:
  run:
    working-directory: ./AdventOfCode/2020

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      result: ${{ steps.run.outputs.result }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-haskell@v1
      with:
        ghc-version: '8.10.3'
        cabal-version: '3.4'

    - name: Cache
      id: cache
      uses: actions/cache@v1
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cabal update
        cabal build AdventOfCode${YEAR}:Day${DAY} --only-dependencies --enable-tests --enable-benchmarks

    - name: Build
      run:  cabal build AdventOfCode${YEAR}:Day${DAY} --enable-tests --enable-benchmarks

    - name: Get puzzle input
      run: curl -# -b "session=${SESSION_ID}" ${BASE_URL}/${YEAR}/day/${DAY}/input > input
    - name: Run
      id: run
      run: |
        output=$(cabal --verbose=0 run AdventOfCode${YEAR}:Day${DAY} < input)
        echo '::set-output name=result::'$output

    - name: Check resubmition
      id: check
      run: |
        if [ ${PART} -eq 1 ]
        then
          PATTERN="Day ${DAY}, one star|Day ${DAY}, two stars"
        else
          PATTERN="Day ${DAY}, two stars"
        fi
        curl -# -b "session=${SESSION_ID}" ${BASE_URL}/${YEAR} > stars
        if cat stars | grep -q -E "$PATTERN"
        then
          echo '::set-output name=resubmition::true'
        else
          echo '::set-output name=resubmition::false'
        fi

    - name: Submit
      if: steps.check.outputs.resubmition != 'true'
      run: |
        echo ${{ steps.check.outputs.resubmition }}
        curl -# -X POST -d "level=${PART}&answer=${{ steps.run.outputs.result }}" --raw -b "session=${SESSION_ID}" ${BASE_URL}/${YEAR}/day/${DAY}/answer > result
        cat result | grep '<article>'
        cat result | grep -q -E "That's the right answer!"

    - name: Update Readme
      if: steps.check.outputs.resubmition != 'true'
      run: |
        answer="${{ steps.run.outputs.result }}"
        search="(Day ${DAY}).*$"
        replace="\| \1 \| $answer \| \| ‚≠ê \|"
        script="s/$search/$replace/1"
        sed --in-place -r -e "$script" README.md
      working-directory: .

    - name: Commit Readme
      if: steps.check.outputs.resubmition != 'true'
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add README.md
        git commit -m "[CI] Obtain a star for ${DAY}_{PART}"
        git push
      working-directory: .
